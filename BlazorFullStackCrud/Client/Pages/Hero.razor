@page "/hero"
@page "/hero/{id:int}"
@inject ISuperHeroService SuperHeroService

@if(Id == null)
{
    <PageTitle>Create a new Super Hero!</PageTitle>
    <h3>Create a new Super Hero!</h3>
}
else
{
    <PageTitle>Edit @hero.HeroName</PageTitle>
    <h3>Edit @hero.HeroName</h3>
}

<EditForm Model="hero" OnSubmit="HandleSubmit">
    <div class="form-group">
        <label for="firstname" >First name</label>
        <InputText id="firstname" @bind-Value="hero.FirstName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="lastname" >Last name</label>
        <InputText id="lastname" @bind-Value="hero.LastName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="heroname" >Hero name</label>
        <InputText id="heroname" @bind-Value="hero.HeroName" class="form-control"></InputText>
    </div>
    <div>
        <label>Comic</label>
        <InputSelect @bind-Value="hero.ComicId" class="form-select">
            @foreach (var comic in SuperHeroService.Comics)
            {
                <option value="@comic.id">@comic.Name</option>
            }
        </InputSelect>
    </div>
        <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
   

</EditForm>

@code {

    [Parameter]
    public int? Id { get; set; }

    public string btnText = string.Empty;

    SuperHero hero = new SuperHero { Comic = new Comic() };

    protected override Task OnInitializedAsync()
    {
        if (Id == null)
        {
            btnText = "Save new hero"
        }
        else
        {
            btnText = "Edit this hero"

            await SuperHeroService.GetComics();
        }
    }

    protected override async Task OnParametersSetAsync()
    {

        if(Id == null)
        {
            //create a new hero
        }
        else
        {
            hero = await SuperHeroService.GetSingleHero((int)Id);
        }

    }

    async Task HandleSubmit()
    {
        
    }
}
